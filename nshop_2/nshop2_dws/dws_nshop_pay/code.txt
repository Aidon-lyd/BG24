create external table if not exists  nshop2_dws.dws_nshop_pay(
    customer_gender         tinyint,
    age_range               string ,
    customer_natives        string ,
    category_name           string ,
    supplier_type           tinyint,
    pay_status              string ,
    pay_type                string ,
    pay_nettype             string ,
    pay_amounts             double ,
    pay_failed_cnt          bigint ,
    pay_succeed_cnt         bigint ,
    pay_order_counts        bigint ,
    usr_pay_counts          bigint ,
    pay_product_counts      bigint ,
    order_pay_amount_rate   double ,
    order_pay_user_rate     double ,
    order_pay_durations_average     double)
row format delimited fields terminated by '\t'
location '/hive/db/nshop2_dws.db/dws_nshop_pay'

insert into nshop2_dws.dws_nshop_pay
select
    customer_gender,
    age_range,
    customer_natives,
    category_name,
    supplier_type,
    pay_status,
    pay_type,
    pay_nettype,
    sum(pay_amounts) as pay_amounts,
    sum(pay_failed_cnt) as pay_failed_cnt,
    sum(pay_succeed_cnt) as pay_succeed_cnt,
    sum(pay_order_counts) as pay_order_counts,
    (case when pay_status = '1' then count(op_customer_id)  else 0 end) as usr_pay_counts,
    sum(pay_product_counts) as pay_product_counts,
    (sum(pay_amounts)/sum(order_amounts))*100 as order_pay_amount_rate,
    (count(1)/sum(usr_order_counts))*100 as order_pay_user_rate,
    (sum(order_pay_durations)/count(1)) as order_pay_durations_average
from 
    (
    select
        dnc.customer_gender customer_gender,
        dnc.age_range age_range,
        dnc.customer_natives customer_natives,
        dnp.category_name category_name,
        dnp.supplier_type supplier_type,
        dno.op_pay_status pay_status,
        dno.os_pay_type pay_type,
        dno.os_pay_nettype pay_nettype,
        dno.op_customer_id op_customer_id,
        (case when dno.op_pay_status = '1' then sum(dno.op_pay_amount) else 0 end) as pay_amounts,
        (case when dno.op_pay_status = '0' then count(*) else 0 end) as pay_failed_cnt,
        (case when dno.op_pay_status = '1' then count(*) else 0 end) as pay_succeed_cnt,
        (case when dno.op_pay_status = '1' then count(dno.os_order_id)  else 0 end) as pay_order_counts,
        (case when dno.op_pay_status = '1' then count(dno.os_customer_id)  else 0 end) as usr_order_counts,
        (case when dno.op_pay_status = '1' then sum(dno.od_product_cnt)  else 0 end) as pay_product_counts,
        (sum(dno.os_payment_money)) as order_amounts,
        abs(sum(dno.order_pay_duration)) as order_pay_durations
        
    from 
        (
        select
            os_order_id,
            os_customer_id,
            os_order_status,
            os_user_areacode,
            os_pay_type,
            os_pay_nettype,
            os_payment_money,
            op_customer_id,
            op_pay_status,
            op_pay_amount,
            op_pay_ctime,
            od_product_id,
            od_product_cnt,
            minute(from_unixtime(cast(op_pay_ctime / 1000  as bigint)))-minute(from_unixtime(cast(cast(os_order_ctime as bigint)/1000 as bigint))) as order_pay_duration
        from
            nshop2_dwd.dwd_nshop_orders
        ) dno
    left join 
        nshop2_dwd.dwd_nshop_customer dnc
    on
        dno.os_customer_id = dnc.customer_id
    left join
        nshop2_dwd.dwd_nshop_product dnp
    on
        dno.od_product_id = dnp.product_code
    group by
        dnc.customer_gender,
        dnc.age_range,
        dnc.customer_natives,
        dnp.category_name,
        dnp.supplier_type,
        dno.op_pay_status,
        dno.os_pay_type,
        dno.os_pay_nettype,
        dno.op_customer_id
        
    )tmp
group by
    customer_gender,
    age_range,
    customer_natives,
    category_name,
    supplier_type,
    pay_status,
    pay_type,
    pay_nettype
;
